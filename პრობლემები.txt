1. კლასს processor არ უნდა ერქვას ზოგადი სახელი, უნდა ერქვას კონკრეტულად რას აკეთებს, უფრო ზუსტად InstantMessageProcessor
2. public -> private სხვა კლასები არ გამოიყენებენ და პირადი ინფორმაცია არ უნდა იყოს ფაბლიქი
3. static -> readonly და კონსტრუქტორიდან წაიკითხოს
4. UserName და Password ცალ-ცალკე, და სლეშის გარეშეც, როცა საჭირო გახდება კონსოლიდაცია მაშინ მოხდება სლეშით
5. რადგანაც To field-ს მხოლოდ SendMessage იყენებს, არაა საჭირო field-ად გაკეთება და გადავცეთ იმ ფუნქციას პარამეტრად
6. კლასებს უტილს არ უნდა ერქვას, უნდა ერქვას რას აკეთებდნენ ამ შემთხვევაში SkypeMessagingClient და ViberMessaginClient
7. კლასის სახელი PascalCase-ით.
8. ინსტენცების ინიციალიზაცია კონსტრუქტორიდან
9. field-ების დასეტვა კონსტრუქტორიდან რადგან მაგ field-ებს აუცილებლად გამოიყენებს და ცალკე დაყენება არაინტუიტიურია და მოუხერხებელი, შეიძლება დაგავიწყდეს
10. SendMessage-ის protocol პარამეტრი Enum-ი, უფრო მარტივი გახდება შესადარებლად
11. if მარტივად რომ დავინახოთ შეგვიძლია switch-ად გადავაკეთოთ, თან default case უზრუნველყოფს საჭირო შემთხვევაში განუსაზღვრელი enum values შემოწმებას.
12. შეგვიძლია გავაკეთოთ MessageClientFactory, ფუნქციით Create, რომელსაც გადავაწვდით protocol-ის სახელს და დაგვიბრუნებს შესაბამის კლიენტს
13. Recieve-ის მაგივრად ReceiveMessage
14. ref-ი მაგივრად return გამოვიყენოთ, რადგან
	ა) არ გვჭირდება მესიჯის გადაცემა
	ბ) არ გვჭირდება გადაცემული მესიჯის შეცვლა რადგან სხვადასხვა მიზანს ემსახურება ეს სტრინგები
	გ) return value გამოუყენებელია
15. SKIPE
16. Exception-ის დაქეჩვა არასწორია დავაზუსტოთ ზუსტად რა ერორს ვჰენდლავთ
17. ახალი exception-ის სროლა არასწორია, ვკარგავთ კონტექსტს, მითუმეტეს როცა inner ექსეფშენს არ ვაწოდებთ
18. დავლოგოთ ერორი, დეტალებით
19. დავაrethrow-ოთ სწორი დეტალებით
20. SkypeUtils da ViberUtils ერთი abstract კლასის სახელად MessagingClient-ის შვილები უნდა იყვნენ რომლებსაც ექნებათ ვირტუალური ფუნქციები SendMessage და ReceiveMessage და  private ფუნქცია VerifyInternetConnection, რომელიც კლიენტის მიხედვით სკაიპთან ან ვაიბერთან გადაამოწებს კავშირს და არა news.com-თან
21. VerifyInternetConnection-ის მაგივრად IsInternetConnected ან რამე მსგავსი სახელი და დააბრუნოს ბულეანი
22. new Ping().Send().Status არღვევს Law of Demeter-ს
	ა) ინიციალიზაცია ცალკე
	ბ) გაგზავნა ცალკე და ასინქრონულად
	გ) შედეგის ამოღება ცალკე
23. შედეგის დაჰენდვლა გათვალისწინებული უნდა იყოს ყველა enum-ის მნიშვნელობაზე და წარუმატებელი მნიშვნელობის შემთხვევაში დალოგვა და შემდეგ დაჰენდლვა
24. ექსეფშენის მაგივრად true ან false
25. SendMessage(SendSkype) ფუნქციის არგუმენტები camelCase-ით
26. ამ ფუნქციაში ვაფშე რახდება
27. რაღატო ვაწყობთ ერთად სლეშით თუ მაინც უნდა გავსპლიტოთ მონაცემები
28. ალბათ SkypeApi-ს გადაეცემა მონაცემები, To, და მესიჯი და ცალცალკე გადავცეთ
29. ორივე კლიენტი იყენებს ქრედინშალებს ხოდა კონსტრუქტორიდან ფილდებში გავტენოთ
30. object-ის მაგივრად სტრინგი
31. ზუსტან ანალოგიური ვაიბერ-უტილში